{"version":3,"file":"static/app_popup.js","mappings":";;;;;;AAWA","sources":["webpack://@solflare/extension/../../libs/shared/dist/features/navigation/components/AnimatedNavIcon/index.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useRef, useState } from 'react';\nimport styled from '@emotion/styled';\nimport lottie from 'lottie-web';\nconst AnimationContainer = styled.div `\n  height: 100%;\n\n  svg path {\n    fill: currentcolor;\n  }\n`;\nexport const AnimatedNavIcon = ({ animationData, play }) => {\n    const element = useRef(null);\n    const animation = useRef(null);\n    const [isReady, setIsReady] = useState(false);\n    useEffect(() => {\n        if (!element.current) {\n            return;\n        }\n        const instance = lottie.loadAnimation({\n            container: element.current,\n            renderer: 'svg',\n            loop: false,\n            autoplay: false,\n            animationData,\n        });\n        instance.setSpeed(2);\n        const handleDOMLoaded = () => {\n            setIsReady(true);\n        };\n        instance.addEventListener('DOMLoaded', handleDOMLoaded);\n        animation.current = instance;\n        return () => {\n            instance.removeEventListener('DOMLoaded', handleDOMLoaded);\n            setIsReady(false);\n            instance.destroy();\n            animation.current = null;\n        };\n    }, [animationData]);\n    useEffect(() => {\n        if (isReady && animation.current) {\n            if (play) {\n                animation.current.goToAndPlay(0, true);\n            }\n            else {\n                animation.current.goToAndStop(0, true);\n            }\n        }\n    }, [isReady, play]);\n    return _jsx(AnimationContainer, { ref: element });\n};\n\n"],"names":[],"sourceRoot":""}